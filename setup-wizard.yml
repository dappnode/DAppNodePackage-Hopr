version: "2"
fields:
  - id: HOPRD_PASSWORD
    target:
      type: environment
      name: HOPRD_PASSWORD
      service: node
    title: Identity file password
    required: true
    pattern: "[^\\s]{10,}"
    patternErrorMessage: Must be at least 10 characters long!
    description: >-
      Password used to protect the new or existing identity file.
    secret: true

  - id: HOPRD_API_TOKEN
    target:
      type: environment
      name: HOPRD_API_TOKEN
      service: node
    title: REST API token
    required: false
    description: |-
      Secret token to the REST API exposed by the node.

      Set this value **only if** you don't want to use the DMS metrics for the HOPR node
      *or* if you plan to expose your REST API (port 3001) or HOPR Admin UI (port 3000) to the public.
    secret: true

  - id: HOPRD_PROVIDER
    target:
      type: environment
      name: HOPRD_PROVIDER
      service: node
    title: RPC Provider URL
    required: false
    description: |-
      URL to the custom RPC provider this HOPR node should use.
      If your DAppnode is running a Gnosis Chain RPC endpoint, it is **strongly recommended** to use it here.

      *Example:* `http://nethermind-xdai.dappnode:8545`
    secret: false
    pattern: "^http[s]{0,1}://[a-z0-9.-]{3,}(:[0-9]{2,5})?(/[a-z0-9.-/_]+)?$"
    patternErrorMessage: Must be a valid url starting with `http://` or `https://`

    #  - id: IDENTITY
    #    target:
    #      type: fileUpload
    #      path: /app/hoprd-db/.hopr-identity
    #      service: node
    #    title: Custom identity file
    #    required: false
    #    description: Upload custom identity file of a previously deployed HOPR node.
    #    secret: false

  - id: CONFIG
    target:
      type: fileUpload
      path: /app/hoprd.cfg.yaml
      service: node
    title: Custom HOPR node configuration file
    required: false
    description: Upload custom configuration file for the HOPR node.
    secret: false

  - id: HOPRD_SAFE_ADDRESS
    target:
      type: environment
      name: HOPRD_SAFE_ADDRESS
      service: node
    title: Staking safe address
    required: true
    description: |-
      Ethereum address of the associated staking safe.

      Check [Staking Hub](https://hub.hoprnet.org/staking/dashboard) for the right address.

      *Example:* `0x010203040506070809aabbccddeeff00112233`
    secret: false
    pattern: "^0x[a-fA-F0-9]{40}$"
    patternErrorMessage: Must be a valid Ethereum address!

  - id: HOPRD_MODULE_ADDRESS
    target:
      type: environment
      name: HOPRD_MODULE_ADDRESS
      service: node
    title: Staking safe module address
    required: true
    description: |-
      Ethereum address of the module connected to the associated staking safe.

      Check [Staking Hub](https://hub.hoprnet.org/staking/dashboard) for the right address.

      *Example:* `0x010203040506070809aabbccddeeff00112233`
    secret: false
    pattern: "^0x[a-fA-F0-9]{40}$"
    patternErrorMessage: Must be a valid Ethereum address!

  - id: HOPRD_HOST
    target:
      type: environment
      name: HOPRD_HOST
      service: node
    title: Public host IP and port
    required: true
    description: |-
      Must contain the `host:port` binding where the node should listen.
      on your router and exposed to the Internet.
      You can also use the (dyn)DNS name of your node as `host`.
      The `host` part must be an external public IP address or DNS name of this node.
      The recommended default TCP `port` is 9091, but any port in the range 9091-9099 is usable.

      *Make sure the given port is port-forwarded on your router and exposed to the Internet.*

      *Example (public IP address):* `1.2.3.4:9091`

      *Example (dynDNS entry):* `abcd1234.dyndns.dappnode.io:9091`
    secret: false
    pattern: "^[a-z0-9.-]{3,}:909[1-9]$"
    patternErrorMessage: Must be in correct host:port format!
